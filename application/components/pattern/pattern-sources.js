'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _md = require('md5');

var _md2 = _interopRequireDefault(_md);

var _patternControl = require('./pattern-control');

var _patternControl2 = _interopRequireDefault(_patternControl);

var _patternCode = require('./pattern-code');

var _patternCode2 = _interopRequireDefault(_patternCode);

var _patternDocumentation = require('./pattern-documentation');

var _patternDocumentation2 = _interopRequireDefault(_patternDocumentation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = PatternSources;


function PatternSources(props) {
	var sources = props.sources;

	return _react2.default.createElement(
		'div',
		{ className: 'pattern-sources' },
		sources.map(function (source) {
			return _react2.default.createElement(PatternSource, {
				active: source.active,
				update: source.update,
				base: props.base,
				concern: source.concern,
				concerns: source.concerns,
				environment: props.environment,
				extname: source.extname,
				id: source.id,
				shortid: source.shortid,
				key: source.shortid,
				language: source.language,
				loading: source.loading,
				location: props.location,
				name: source.name,
				onConcernChange: props.onConcernChange,
				onFileRequest: props.onFileRequest,
				onTypeChange: props.onTypeChange,
				source: source.source,
				type: source.type,
				types: source.types
			});
		})
	);
}

PatternSources.propTypes = {
	base: _react.PropTypes.string.isRequired,
	environment: _react.PropTypes.string.isRequired,
	location: _react.PropTypes.shape({
		pathname: _react.PropTypes.string.isRequired,
		query: _react.PropTypes.object.isRequired
	}).isRequired,
	onConcernChange: _react.PropTypes.func.isRequired,
	onFileRequest: _react.PropTypes.func.isRequired,
	onTypeChange: _react.PropTypes.func.isRequired,
	sources: _react.PropTypes.arrayOf(_react.PropTypes.shape({
		active: _react.PropTypes.bool.isRequired,
		concern: _react.PropTypes.string.isRequired,
		id: _react.PropTypes.string.isRequired,
		language: _react.PropTypes.string.isRequired,
		name: _react.PropTypes.string.isRequired,
		source: _react.PropTypes.string.isRequired,
		type: _react.PropTypes.string.isRequired
	}))
};

var PatternSource = (0, _autobindDecorator2.default)(_class = (_temp = _class2 = function (_Component) {
	(0, _inherits3.default)(PatternSource, _Component);

	function PatternSource() {
		(0, _classCallCheck3.default)(this, PatternSource);
		return (0, _possibleConstructorReturn3.default)(this, (PatternSource.__proto__ || (0, _getPrototypeOf2.default)(PatternSource)).apply(this, arguments));
	}

	(0, _createClass3.default)(PatternSource, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var props = this.props;

			if (props.update) {
				props.onFileRequest({
					id: props.id,
					shortid: props.shortid,
					environment: props.environment,
					type: props.type,
					base: props.base
				});
			}
		}
	}, {
		key: 'componentWillUpdate',
		value: function componentWillUpdate(next) {
			if (next.update) {
				next.onFileRequest({
					id: this.props.id,
					shortid: this.props.shortid,
					environment: this.props.environment,
					type: this.props.type,
					base: this.props.base
				});
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var props = this.props;

			var className = (0, _classnames2.default)('pattern-source', {
				'pattern-source--loading': props.loading
			});
			var verb = props.active ? 'Close' : 'View';
			var title = verb + ' ' + props.concern + props.extname;
			return _react2.default.createElement(
				'div',
				{ className: className },
				_react2.default.createElement(_patternControl2.default, {
					active: props.active,
					base: props.base,
					disabled: props.loading,
					expand: true,
					key: props.id,
					location: props.location,
					name: props.name,
					shortid: props.id,
					title: title
				}),
				props.active && props.language === 'md' && _react2.default.createElement(_patternDocumentation2.default, {
					base: props.base,
					name: props.name,
					source: props.source
				}),
				props.active && props.language !== 'md' && _react2.default.createElement(_patternCode2.default, {
					base: props.base,
					concern: props.concern,
					concerns: props.concerns,
					copy: true,
					extname: props.extname,
					format: props.language,
					highlight: true,
					id: (0, _md2.default)([props.id, props.source].join(':')),
					name: props.name,
					onConcernChange: props.onConcernChange,
					onTypeChange: props.onTypeChange,
					source: props.source,
					type: props.type,
					types: props.types
				})
			);
		}
	}]);
	return PatternSource;
}(_react.Component), _class2.propTypes = {
	active: _react.PropTypes.bool.isRequired,
	base: _react.PropTypes.string.isRequired,
	concern: _react.PropTypes.string.isRequired,
	concerns: _react.PropTypes.arrayOf(_react.PropTypes.string).isRequired,
	environment: _react.PropTypes.string.isRequired,
	id: _react.PropTypes.string.isRequired,
	shortid: _react.PropTypes.string.isRequired,
	loading: _react.PropTypes.bool,
	location: _react.PropTypes.shape({
		pathname: _react.PropTypes.string.isRequired,
		query: _react.PropTypes.object.isRequired
	}).isRequired,
	name: _react.PropTypes.string.isRequired,
	onFileRequest: _react.PropTypes.func.isRequired,
	language: _react.PropTypes.string.isRequired,
	source: _react.PropTypes.string.isRequired,
	type: _react.PropTypes.string.isRequired,
	types: _react.PropTypes.arrayOf(_react.PropTypes.string).isRequired,
	title: _react.PropTypes.string,
	update: _react.PropTypes.bool.isRequired
}, _temp)) || _class;

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,