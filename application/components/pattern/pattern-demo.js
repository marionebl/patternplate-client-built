'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _queryString = require('query-string');

var _queryString2 = _interopRequireDefault(_queryString);

var _urlQuery = require('../../utils/url-query');

var _urlQuery2 = _interopRequireDefault(_urlQuery);

var _frame = require('../common/frame');

var _frame2 = _interopRequireDefault(_frame);

var _patternRuler = require('./pattern-ruler');

var _patternRuler2 = _interopRequireDefault(_patternRuler);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PatternDemo(props) {
	var source = _urlQuery2.default.format({
		pathname: props.base + 'demo/' + props.target + '/index.html',
		query: { environment: props.environment }
	});

	var query = _queryString2.default.stringify({
		'reload-time': props.reloadTime
	});

	var src = [source, query].filter(Boolean).join('?');
	var className = (0, _classnames2.default)('pattern-demo-container', {
		'pattern-demo-container--opacity': props.opacity
	});
	var demoClassName = (0, _classnames2.default)('pattern-demo', {
		'pattern-demo--resizable': props.resizeable
	});

	return _react2.default.createElement(
		'div',
		{ className: className },
		props.rulers && _react2.default.createElement(
			'div',
			{ className: 'rulers' },
			_react2.default.createElement(_patternRuler2.default, {
				type: 'vertical',
				step: 10,
				length: props.rulerLengthY,
				markers: [props.height],
				offset: props.rulerY
			}),
			_react2.default.createElement(_patternRuler2.default, {
				type: 'horizontal',
				step: 10,
				length: props.rulerLengthX,
				markers: [props.width],
				offset: props.rulerX
			})
		),
		_react2.default.createElement(_frame2.default, {
			className: demoClassName,
			id: source,
			height: props.height,
			onLoad: props.onReady,
			onError: props.onError,
			onScroll: props.onScroll,
			onResize: props.onResize,
			resizeable: props.rulers,
			resize: props.resize,
			src: src,
			width: props.width
		})
	);
}

PatternDemo.propTypes = {
	base: _react.PropTypes.string.isRequired,
	environment: _react.PropTypes.string.isRequired,
	height: _react.PropTypes.number,
	onError: _react.PropTypes.func.isRequired,
	onReady: _react.PropTypes.func.isRequired,
	onResize: _react.PropTypes.func.isRequired,
	onScroll: _react.PropTypes.func.isRequired,
	opacity: _react.PropTypes.bool.isRequired,
	loading: _react.PropTypes.bool.isRequired,
	reloadTime: _react.PropTypes.number,
	resizeable: _react.PropTypes.bool.isRequired,
	resize: _react.PropTypes.func.isRequired,
	rulers: _react.PropTypes.bool.isRequired,
	rulerX: _react.PropTypes.number.isRequired,
	rulerLengthX: _react.PropTypes.number.isRequired,
	rulerY: _react.PropTypes.number.isRequired,
	rulerLengthY: _react.PropTypes.number.isRequired,
	target: _react.PropTypes.string.isRequired,
	width: _react.PropTypes.number
};

exports.default = PatternDemo;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NvdXJjZS9hcHBsaWNhdGlvbi9jb21wb25lbnRzL3BhdHRlcm4vcGF0dGVybi1kZW1vLmpzIl0sIm5hbWVzIjpbIlBhdHRlcm5EZW1vIiwicHJvcHMiLCJzb3VyY2UiLCJmb3JtYXQiLCJwYXRobmFtZSIsImJhc2UiLCJ0YXJnZXQiLCJxdWVyeSIsImVudmlyb25tZW50Iiwic3RyaW5naWZ5IiwicmVsb2FkVGltZSIsInNyYyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiY2xhc3NOYW1lIiwib3BhY2l0eSIsImRlbW9DbGFzc05hbWUiLCJyZXNpemVhYmxlIiwicnVsZXJzIiwicnVsZXJMZW5ndGhZIiwiaGVpZ2h0IiwicnVsZXJZIiwicnVsZXJMZW5ndGhYIiwid2lkdGgiLCJydWxlclgiLCJvblJlYWR5Iiwib25FcnJvciIsIm9uU2Nyb2xsIiwib25SZXNpemUiLCJyZXNpemUiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwibnVtYmVyIiwiZnVuYyIsImJvb2wiLCJsb2FkaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLFNBQVNBLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQzNCLEtBQU1DLFNBQVMsbUJBQVNDLE1BQVQsQ0FBZ0I7QUFDOUJDLFlBQWFILE1BQU1JLElBQW5CLGFBQStCSixNQUFNSyxNQUFyQyxnQkFEOEI7QUFFOUJDLFNBQU8sRUFBQ0MsYUFBYVAsTUFBTU8sV0FBcEI7QUFGdUIsRUFBaEIsQ0FBZjs7QUFLQSxLQUFNRCxRQUFRLHNCQUFZRSxTQUFaLENBQXNCO0FBQ25DLGlCQUFlUixNQUFNUztBQURjLEVBQXRCLENBQWQ7O0FBSUEsS0FBTUMsTUFBTSxDQUFDVCxNQUFELEVBQVNLLEtBQVQsRUFBZ0JLLE1BQWhCLENBQXVCQyxPQUF2QixFQUFnQ0MsSUFBaEMsQ0FBcUMsR0FBckMsQ0FBWjtBQUNBLEtBQU1DLFlBQVksMEJBQUssd0JBQUwsRUFBK0I7QUFDaEQscUNBQW1DZCxNQUFNZTtBQURPLEVBQS9CLENBQWxCO0FBR0EsS0FBTUMsZ0JBQWdCLDBCQUFLLGNBQUwsRUFBcUI7QUFDMUMsNkJBQTJCaEIsTUFBTWlCO0FBRFMsRUFBckIsQ0FBdEI7O0FBSUEsUUFDQztBQUFBO0FBQUEsSUFBSyxXQUFXSCxTQUFoQjtBQUVFZCxRQUFNa0IsTUFBTixJQUNDO0FBQUE7QUFBQSxLQUFLLFdBQVUsUUFBZjtBQUNDO0FBQ0MsVUFBSyxVQUROO0FBRUMsVUFBTSxFQUZQO0FBR0MsWUFBUWxCLE1BQU1tQixZQUhmO0FBSUMsYUFBUyxDQUFDbkIsTUFBTW9CLE1BQVAsQ0FKVjtBQUtDLFlBQVFwQixNQUFNcUI7QUFMZixLQUREO0FBUUM7QUFDQyxVQUFLLFlBRE47QUFFQyxVQUFNLEVBRlA7QUFHQyxZQUFRckIsTUFBTXNCLFlBSGY7QUFJQyxhQUFTLENBQUN0QixNQUFNdUIsS0FBUCxDQUpWO0FBS0MsWUFBUXZCLE1BQU13QjtBQUxmO0FBUkQsR0FISDtBQW9CQztBQUNDLGNBQVdSLGFBRFo7QUFFQyxPQUFJZixNQUZMO0FBR0MsV0FBUUQsTUFBTW9CLE1BSGY7QUFJQyxXQUFRcEIsTUFBTXlCLE9BSmY7QUFLQyxZQUFTekIsTUFBTTBCLE9BTGhCO0FBTUMsYUFBVTFCLE1BQU0yQixRQU5qQjtBQU9DLGFBQVUzQixNQUFNNEIsUUFQakI7QUFRQyxlQUFZNUIsTUFBTWtCLE1BUm5CO0FBU0MsV0FBUWxCLE1BQU02QixNQVRmO0FBVUMsUUFBS25CLEdBVk47QUFXQyxVQUFPVixNQUFNdUI7QUFYZDtBQXBCRCxFQUREO0FBb0NBOztBQUVEeEIsWUFBWStCLFNBQVosR0FBd0I7QUFDdkIxQixPQUFNLGlCQUFNMkIsTUFBTixDQUFhQyxVQURJO0FBRXZCekIsY0FBYSxpQkFBTXdCLE1BQU4sQ0FBYUMsVUFGSDtBQUd2QlosU0FBUSxpQkFBTWEsTUFIUztBQUl2QlAsVUFBUyxpQkFBTVEsSUFBTixDQUFXRixVQUpHO0FBS3ZCUCxVQUFTLGlCQUFNUyxJQUFOLENBQVdGLFVBTEc7QUFNdkJKLFdBQVUsaUJBQU1NLElBQU4sQ0FBV0YsVUFORTtBQU92QkwsV0FBVSxpQkFBTU8sSUFBTixDQUFXRixVQVBFO0FBUXZCakIsVUFBUyxpQkFBTW9CLElBQU4sQ0FBV0gsVUFSRztBQVN2QkksVUFBUyxpQkFBTUQsSUFBTixDQUFXSCxVQVRHO0FBVXZCdkIsYUFBWSxpQkFBTXdCLE1BVks7QUFXdkJoQixhQUFZLGlCQUFNa0IsSUFBTixDQUFXSCxVQVhBO0FBWXZCSCxTQUFRLGlCQUFNSyxJQUFOLENBQVdGLFVBWkk7QUFhdkJkLFNBQVEsaUJBQU1pQixJQUFOLENBQVdILFVBYkk7QUFjdkJSLFNBQVEsaUJBQU1TLE1BQU4sQ0FBYUQsVUFkRTtBQWV2QlYsZUFBYyxpQkFBTVcsTUFBTixDQUFhRCxVQWZKO0FBZ0J2QlgsU0FBUSxpQkFBTVksTUFBTixDQUFhRCxVQWhCRTtBQWlCdkJiLGVBQWMsaUJBQU1jLE1BQU4sQ0FBYUQsVUFqQko7QUFrQnZCM0IsU0FBUSxpQkFBTTBCLE1BQU4sQ0FBYUMsVUFsQkU7QUFtQnZCVCxRQUFPLGlCQUFNVTtBQW5CVSxDQUF4Qjs7a0JBc0JlbEMsVyIsImZpbGUiOiJwYXR0ZXJuLWRlbW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBqb2luIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHF1ZXJ5U3RyaW5nIGZyb20gJ3F1ZXJ5LXN0cmluZyc7XG5pbXBvcnQgdXJsUXVlcnkgZnJvbSAnLi4vLi4vdXRpbHMvdXJsLXF1ZXJ5JztcbmltcG9ydCBGcmFtZSBmcm9tICcuLi9jb21tb24vZnJhbWUnO1xuaW1wb3J0IFJ1bGVyIGZyb20gJy4vcGF0dGVybi1ydWxlcic7XG5cbmZ1bmN0aW9uIFBhdHRlcm5EZW1vKHByb3BzKSB7XG5cdGNvbnN0IHNvdXJjZSA9IHVybFF1ZXJ5LmZvcm1hdCh7XG5cdFx0cGF0aG5hbWU6IGAke3Byb3BzLmJhc2V9ZGVtby8ke3Byb3BzLnRhcmdldH0vaW5kZXguaHRtbGAsXG5cdFx0cXVlcnk6IHtlbnZpcm9ubWVudDogcHJvcHMuZW52aXJvbm1lbnR9XG5cdH0pO1xuXG5cdGNvbnN0IHF1ZXJ5ID0gcXVlcnlTdHJpbmcuc3RyaW5naWZ5KHtcblx0XHQncmVsb2FkLXRpbWUnOiBwcm9wcy5yZWxvYWRUaW1lXG5cdH0pO1xuXG5cdGNvbnN0IHNyYyA9IFtzb3VyY2UsIHF1ZXJ5XS5maWx0ZXIoQm9vbGVhbikuam9pbignPycpO1xuXHRjb25zdCBjbGFzc05hbWUgPSBqb2luKCdwYXR0ZXJuLWRlbW8tY29udGFpbmVyJywge1xuXHRcdCdwYXR0ZXJuLWRlbW8tY29udGFpbmVyLS1vcGFjaXR5JzogcHJvcHMub3BhY2l0eVxuXHR9KTtcblx0Y29uc3QgZGVtb0NsYXNzTmFtZSA9IGpvaW4oJ3BhdHRlcm4tZGVtbycsIHtcblx0XHQncGF0dGVybi1kZW1vLS1yZXNpemFibGUnOiBwcm9wcy5yZXNpemVhYmxlXG5cdH0pO1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZX0+XG5cdFx0XHR7XG5cdFx0XHRcdHByb3BzLnJ1bGVycyAmJlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPVwicnVsZXJzXCI+XG5cdFx0XHRcdFx0XHQ8UnVsZXJcblx0XHRcdFx0XHRcdFx0dHlwZT1cInZlcnRpY2FsXCJcblx0XHRcdFx0XHRcdFx0c3RlcD17MTB9XG5cdFx0XHRcdFx0XHRcdGxlbmd0aD17cHJvcHMucnVsZXJMZW5ndGhZfVxuXHRcdFx0XHRcdFx0XHRtYXJrZXJzPXtbcHJvcHMuaGVpZ2h0XX1cblx0XHRcdFx0XHRcdFx0b2Zmc2V0PXtwcm9wcy5ydWxlcll9XG5cdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHQ8UnVsZXJcblx0XHRcdFx0XHRcdFx0dHlwZT1cImhvcml6b250YWxcIlxuXHRcdFx0XHRcdFx0XHRzdGVwPXsxMH1cblx0XHRcdFx0XHRcdFx0bGVuZ3RoPXtwcm9wcy5ydWxlckxlbmd0aFh9XG5cdFx0XHRcdFx0XHRcdG1hcmtlcnM9e1twcm9wcy53aWR0aF19XG5cdFx0XHRcdFx0XHRcdG9mZnNldD17cHJvcHMucnVsZXJYfVxuXHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0fVxuXHRcdFx0PEZyYW1lXG5cdFx0XHRcdGNsYXNzTmFtZT17ZGVtb0NsYXNzTmFtZX1cblx0XHRcdFx0aWQ9e3NvdXJjZX1cblx0XHRcdFx0aGVpZ2h0PXtwcm9wcy5oZWlnaHR9XG5cdFx0XHRcdG9uTG9hZD17cHJvcHMub25SZWFkeX1cblx0XHRcdFx0b25FcnJvcj17cHJvcHMub25FcnJvcn1cblx0XHRcdFx0b25TY3JvbGw9e3Byb3BzLm9uU2Nyb2xsfVxuXHRcdFx0XHRvblJlc2l6ZT17cHJvcHMub25SZXNpemV9XG5cdFx0XHRcdHJlc2l6ZWFibGU9e3Byb3BzLnJ1bGVyc31cblx0XHRcdFx0cmVzaXplPXtwcm9wcy5yZXNpemV9XG5cdFx0XHRcdHNyYz17c3JjfVxuXHRcdFx0XHR3aWR0aD17cHJvcHMud2lkdGh9XG5cdFx0XHRcdC8+XG5cdFx0PC9kaXY+XG5cdCk7XG59XG5cblBhdHRlcm5EZW1vLnByb3BUeXBlcyA9IHtcblx0YmFzZTogdHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG5cdGVudmlyb25tZW50OiB0eXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0aGVpZ2h0OiB0eXBlcy5udW1iZXIsXG5cdG9uRXJyb3I6IHR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcblx0b25SZWFkeTogdHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXHRvblJlc2l6ZTogdHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXHRvblNjcm9sbDogdHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXHRvcGFjaXR5OiB0eXBlcy5ib29sLmlzUmVxdWlyZWQsXG5cdGxvYWRpbmc6IHR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcblx0cmVsb2FkVGltZTogdHlwZXMubnVtYmVyLFxuXHRyZXNpemVhYmxlOiB0eXBlcy5ib29sLmlzUmVxdWlyZWQsXG5cdHJlc2l6ZTogdHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXHRydWxlcnM6IHR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcblx0cnVsZXJYOiB0eXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcblx0cnVsZXJMZW5ndGhYOiB0eXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcblx0cnVsZXJZOiB0eXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcblx0cnVsZXJMZW5ndGhZOiB0eXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcblx0dGFyZ2V0OiB0eXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0d2lkdGg6IHR5cGVzLm51bWJlclxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGF0dGVybkRlbW87XG4iXX0=